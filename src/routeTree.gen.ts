/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminImport } from './routes/_admin'
import { Route as AdminIndexImport } from './routes/_admin/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AdminProfileImport } from './routes/_admin/profile'
import { Route as AdminAboutImport } from './routes/_admin/about'
import { Route as AdminProductIndexImport } from './routes/_admin/product/index'
import { Route as AdminSettingLayoutImport } from './routes/_admin/setting/_layout'
import { Route as AdminProductCreateImport } from './routes/_admin/product/create'
import { Route as AdminProductIdImport } from './routes/_admin/product/$id'
import { Route as AdminSettingLayoutIndexImport } from './routes/_admin/setting/_layout/index'
import { Route as AdminSettingLayoutUserIndexImport } from './routes/_admin/setting/_layout/user/index'
import { Route as AdminSettingLayoutRoleIndexImport } from './routes/_admin/setting/_layout/role/index'
import { Route as AdminSettingLayoutUserIdImport } from './routes/_admin/setting/_layout/user/$id'
import { Route as AdminSettingLayoutRoleNewImport } from './routes/_admin/setting/_layout/role/new'
import { Route as AdminSettingLayoutRoleIdImport } from './routes/_admin/setting/_layout/role/$id'

// Create Virtual Routes

const AdminSettingImport = createFileRoute('/_admin/setting')()

// Create/Update Routes

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const AdminSettingRoute = AdminSettingImport.update({
  id: '/setting',
  path: '/setting',
  getParentRoute: () => AdminRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminProfileRoute = AdminProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAboutRoute = AdminAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AdminRoute,
} as any)

const AdminProductIndexRoute = AdminProductIndexImport.update({
  id: '/product/',
  path: '/product/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminSettingLayoutRoute = AdminSettingLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AdminSettingRoute,
} as any)

const AdminProductCreateRoute = AdminProductCreateImport.update({
  id: '/product/create',
  path: '/product/create',
  getParentRoute: () => AdminRoute,
} as any)

const AdminProductIdRoute = AdminProductIdImport.update({
  id: '/product/$id',
  path: '/product/$id',
  getParentRoute: () => AdminRoute,
} as any)

const AdminSettingLayoutIndexRoute = AdminSettingLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminSettingLayoutRoute,
} as any)

const AdminSettingLayoutUserIndexRoute =
  AdminSettingLayoutUserIndexImport.update({
    id: '/user/',
    path: '/user/',
    getParentRoute: () => AdminSettingLayoutRoute,
  } as any)

const AdminSettingLayoutRoleIndexRoute =
  AdminSettingLayoutRoleIndexImport.update({
    id: '/role/',
    path: '/role/',
    getParentRoute: () => AdminSettingLayoutRoute,
  } as any)

const AdminSettingLayoutUserIdRoute = AdminSettingLayoutUserIdImport.update({
  id: '/user/$id',
  path: '/user/$id',
  getParentRoute: () => AdminSettingLayoutRoute,
} as any)

const AdminSettingLayoutRoleNewRoute = AdminSettingLayoutRoleNewImport.update({
  id: '/role/new',
  path: '/role/new',
  getParentRoute: () => AdminSettingLayoutRoute,
} as any)

const AdminSettingLayoutRoleIdRoute = AdminSettingLayoutRoleIdImport.update({
  id: '/role/$id',
  path: '/role/$id',
  getParentRoute: () => AdminSettingLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_admin/about': {
      id: '/_admin/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AdminAboutImport
      parentRoute: typeof AdminImport
    }
    '/_admin/profile': {
      id: '/_admin/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AdminProfileImport
      parentRoute: typeof AdminImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_admin/': {
      id: '/_admin/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/product/$id': {
      id: '/_admin/product/$id'
      path: '/product/$id'
      fullPath: '/product/$id'
      preLoaderRoute: typeof AdminProductIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/product/create': {
      id: '/_admin/product/create'
      path: '/product/create'
      fullPath: '/product/create'
      preLoaderRoute: typeof AdminProductCreateImport
      parentRoute: typeof AdminImport
    }
    '/_admin/setting': {
      id: '/_admin/setting'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof AdminSettingImport
      parentRoute: typeof AdminImport
    }
    '/_admin/setting/_layout': {
      id: '/_admin/setting/_layout'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof AdminSettingLayoutImport
      parentRoute: typeof AdminSettingRoute
    }
    '/_admin/product/': {
      id: '/_admin/product/'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof AdminProductIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/setting/_layout/': {
      id: '/_admin/setting/_layout/'
      path: '/'
      fullPath: '/setting/'
      preLoaderRoute: typeof AdminSettingLayoutIndexImport
      parentRoute: typeof AdminSettingLayoutImport
    }
    '/_admin/setting/_layout/role/$id': {
      id: '/_admin/setting/_layout/role/$id'
      path: '/role/$id'
      fullPath: '/setting/role/$id'
      preLoaderRoute: typeof AdminSettingLayoutRoleIdImport
      parentRoute: typeof AdminSettingLayoutImport
    }
    '/_admin/setting/_layout/role/new': {
      id: '/_admin/setting/_layout/role/new'
      path: '/role/new'
      fullPath: '/setting/role/new'
      preLoaderRoute: typeof AdminSettingLayoutRoleNewImport
      parentRoute: typeof AdminSettingLayoutImport
    }
    '/_admin/setting/_layout/user/$id': {
      id: '/_admin/setting/_layout/user/$id'
      path: '/user/$id'
      fullPath: '/setting/user/$id'
      preLoaderRoute: typeof AdminSettingLayoutUserIdImport
      parentRoute: typeof AdminSettingLayoutImport
    }
    '/_admin/setting/_layout/role/': {
      id: '/_admin/setting/_layout/role/'
      path: '/role'
      fullPath: '/setting/role'
      preLoaderRoute: typeof AdminSettingLayoutRoleIndexImport
      parentRoute: typeof AdminSettingLayoutImport
    }
    '/_admin/setting/_layout/user/': {
      id: '/_admin/setting/_layout/user/'
      path: '/user'
      fullPath: '/setting/user'
      preLoaderRoute: typeof AdminSettingLayoutUserIndexImport
      parentRoute: typeof AdminSettingLayoutImport
    }
  }
}

// Create and export the route tree

interface AdminSettingLayoutRouteChildren {
  AdminSettingLayoutIndexRoute: typeof AdminSettingLayoutIndexRoute
  AdminSettingLayoutRoleIdRoute: typeof AdminSettingLayoutRoleIdRoute
  AdminSettingLayoutRoleNewRoute: typeof AdminSettingLayoutRoleNewRoute
  AdminSettingLayoutUserIdRoute: typeof AdminSettingLayoutUserIdRoute
  AdminSettingLayoutRoleIndexRoute: typeof AdminSettingLayoutRoleIndexRoute
  AdminSettingLayoutUserIndexRoute: typeof AdminSettingLayoutUserIndexRoute
}

const AdminSettingLayoutRouteChildren: AdminSettingLayoutRouteChildren = {
  AdminSettingLayoutIndexRoute: AdminSettingLayoutIndexRoute,
  AdminSettingLayoutRoleIdRoute: AdminSettingLayoutRoleIdRoute,
  AdminSettingLayoutRoleNewRoute: AdminSettingLayoutRoleNewRoute,
  AdminSettingLayoutUserIdRoute: AdminSettingLayoutUserIdRoute,
  AdminSettingLayoutRoleIndexRoute: AdminSettingLayoutRoleIndexRoute,
  AdminSettingLayoutUserIndexRoute: AdminSettingLayoutUserIndexRoute,
}

const AdminSettingLayoutRouteWithChildren =
  AdminSettingLayoutRoute._addFileChildren(AdminSettingLayoutRouteChildren)

interface AdminSettingRouteChildren {
  AdminSettingLayoutRoute: typeof AdminSettingLayoutRouteWithChildren
}

const AdminSettingRouteChildren: AdminSettingRouteChildren = {
  AdminSettingLayoutRoute: AdminSettingLayoutRouteWithChildren,
}

const AdminSettingRouteWithChildren = AdminSettingRoute._addFileChildren(
  AdminSettingRouteChildren,
)

interface AdminRouteChildren {
  AdminAboutRoute: typeof AdminAboutRoute
  AdminProfileRoute: typeof AdminProfileRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminProductIdRoute: typeof AdminProductIdRoute
  AdminProductCreateRoute: typeof AdminProductCreateRoute
  AdminSettingRoute: typeof AdminSettingRouteWithChildren
  AdminProductIndexRoute: typeof AdminProductIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAboutRoute: AdminAboutRoute,
  AdminProfileRoute: AdminProfileRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminProductIdRoute: AdminProductIdRoute,
  AdminProductCreateRoute: AdminProductCreateRoute,
  AdminSettingRoute: AdminSettingRouteWithChildren,
  AdminProductIndexRoute: AdminProductIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AdminRouteWithChildren
  '/about': typeof AdminAboutRoute
  '/profile': typeof AdminProfileRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof AdminIndexRoute
  '/product/$id': typeof AdminProductIdRoute
  '/product/create': typeof AdminProductCreateRoute
  '/setting': typeof AdminSettingLayoutRouteWithChildren
  '/product': typeof AdminProductIndexRoute
  '/setting/': typeof AdminSettingLayoutIndexRoute
  '/setting/role/$id': typeof AdminSettingLayoutRoleIdRoute
  '/setting/role/new': typeof AdminSettingLayoutRoleNewRoute
  '/setting/user/$id': typeof AdminSettingLayoutUserIdRoute
  '/setting/role': typeof AdminSettingLayoutRoleIndexRoute
  '/setting/user': typeof AdminSettingLayoutUserIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof AdminAboutRoute
  '/profile': typeof AdminProfileRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof AdminIndexRoute
  '/product/$id': typeof AdminProductIdRoute
  '/product/create': typeof AdminProductCreateRoute
  '/setting': typeof AdminSettingLayoutIndexRoute
  '/product': typeof AdminProductIndexRoute
  '/setting/role/$id': typeof AdminSettingLayoutRoleIdRoute
  '/setting/role/new': typeof AdminSettingLayoutRoleNewRoute
  '/setting/user/$id': typeof AdminSettingLayoutUserIdRoute
  '/setting/role': typeof AdminSettingLayoutRoleIndexRoute
  '/setting/user': typeof AdminSettingLayoutUserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_admin/about': typeof AdminAboutRoute
  '/_admin/profile': typeof AdminProfileRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_admin/': typeof AdminIndexRoute
  '/_admin/product/$id': typeof AdminProductIdRoute
  '/_admin/product/create': typeof AdminProductCreateRoute
  '/_admin/setting': typeof AdminSettingRouteWithChildren
  '/_admin/setting/_layout': typeof AdminSettingLayoutRouteWithChildren
  '/_admin/product/': typeof AdminProductIndexRoute
  '/_admin/setting/_layout/': typeof AdminSettingLayoutIndexRoute
  '/_admin/setting/_layout/role/$id': typeof AdminSettingLayoutRoleIdRoute
  '/_admin/setting/_layout/role/new': typeof AdminSettingLayoutRoleNewRoute
  '/_admin/setting/_layout/user/$id': typeof AdminSettingLayoutUserIdRoute
  '/_admin/setting/_layout/role/': typeof AdminSettingLayoutRoleIndexRoute
  '/_admin/setting/_layout/user/': typeof AdminSettingLayoutUserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/profile'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/product/$id'
    | '/product/create'
    | '/setting'
    | '/product'
    | '/setting/'
    | '/setting/role/$id'
    | '/setting/role/new'
    | '/setting/user/$id'
    | '/setting/role'
    | '/setting/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/profile'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/product/$id'
    | '/product/create'
    | '/setting'
    | '/product'
    | '/setting/role/$id'
    | '/setting/role/new'
    | '/setting/user/$id'
    | '/setting/role'
    | '/setting/user'
  id:
    | '__root__'
    | '/_admin'
    | '/_admin/about'
    | '/_admin/profile'
    | '/auth/login'
    | '/auth/register'
    | '/_admin/'
    | '/_admin/product/$id'
    | '/_admin/product/create'
    | '/_admin/setting'
    | '/_admin/setting/_layout'
    | '/_admin/product/'
    | '/_admin/setting/_layout/'
    | '/_admin/setting/_layout/role/$id'
    | '/_admin/setting/_layout/role/new'
    | '/_admin/setting/_layout/user/$id'
    | '/_admin/setting/_layout/role/'
    | '/_admin/setting/_layout/user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminRoute: typeof AdminRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminRoute: AdminRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/about",
        "/_admin/profile",
        "/_admin/",
        "/_admin/product/$id",
        "/_admin/product/create",
        "/_admin/setting",
        "/_admin/product/"
      ]
    },
    "/_admin/about": {
      "filePath": "_admin/about.tsx",
      "parent": "/_admin"
    },
    "/_admin/profile": {
      "filePath": "_admin/profile.tsx",
      "parent": "/_admin"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/_admin/": {
      "filePath": "_admin/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/product/$id": {
      "filePath": "_admin/product/$id.tsx",
      "parent": "/_admin"
    },
    "/_admin/product/create": {
      "filePath": "_admin/product/create.tsx",
      "parent": "/_admin"
    },
    "/_admin/setting": {
      "filePath": "_admin/setting",
      "parent": "/_admin",
      "children": [
        "/_admin/setting/_layout"
      ]
    },
    "/_admin/setting/_layout": {
      "filePath": "_admin/setting/_layout.tsx",
      "parent": "/_admin/setting",
      "children": [
        "/_admin/setting/_layout/",
        "/_admin/setting/_layout/role/$id",
        "/_admin/setting/_layout/role/new",
        "/_admin/setting/_layout/user/$id",
        "/_admin/setting/_layout/role/",
        "/_admin/setting/_layout/user/"
      ]
    },
    "/_admin/product/": {
      "filePath": "_admin/product/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/setting/_layout/": {
      "filePath": "_admin/setting/_layout/index.tsx",
      "parent": "/_admin/setting/_layout"
    },
    "/_admin/setting/_layout/role/$id": {
      "filePath": "_admin/setting/_layout/role/$id.tsx",
      "parent": "/_admin/setting/_layout"
    },
    "/_admin/setting/_layout/role/new": {
      "filePath": "_admin/setting/_layout/role/new.tsx",
      "parent": "/_admin/setting/_layout"
    },
    "/_admin/setting/_layout/user/$id": {
      "filePath": "_admin/setting/_layout/user/$id.tsx",
      "parent": "/_admin/setting/_layout"
    },
    "/_admin/setting/_layout/role/": {
      "filePath": "_admin/setting/_layout/role/index.tsx",
      "parent": "/_admin/setting/_layout"
    },
    "/_admin/setting/_layout/user/": {
      "filePath": "_admin/setting/_layout/user/index.tsx",
      "parent": "/_admin/setting/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
