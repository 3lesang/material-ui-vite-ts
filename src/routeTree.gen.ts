/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthLayoutImport } from './routes/_authLayout'
import { Route as AdminImport } from './routes/_admin'
import { Route as AdminIndexImport } from './routes/_admin/index'
import { Route as AdminProfileImport } from './routes/_admin/profile'
import { Route as AdminAboutImport } from './routes/_admin/about'
import { Route as AdminUserIndexImport } from './routes/_admin/user/index'
import { Route as AdminRoleIndexImport } from './routes/_admin/role/index'
import { Route as AdminProductIndexImport } from './routes/_admin/product/index'
import { Route as AdminFileIndexImport } from './routes/_admin/file/index'
import { Route as AdminCategoryIndexImport } from './routes/_admin/category/index'
import { Route as AuthLayoutAuthRegisterImport } from './routes/_authLayout/auth/register'
import { Route as AuthLayoutAuthLoginImport } from './routes/_authLayout/auth/login'
import { Route as AdminUserNewImport } from './routes/_admin/user/new'
import { Route as AdminUserIdImport } from './routes/_admin/user/$id'
import { Route as AdminRoleNewImport } from './routes/_admin/role/new'
import { Route as AdminRoleIdImport } from './routes/_admin/role/$id'
import { Route as AdminProductNewImport } from './routes/_admin/product/new'
import { Route as AdminProductIdImport } from './routes/_admin/product/$id'
import { Route as AdminFileIdImport } from './routes/_admin/file/$id'
import { Route as AdminCategoryNewImport } from './routes/_admin/category/new'
import { Route as AdminCategoryIdImport } from './routes/_admin/category/$id'

// Create/Update Routes

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminProfileRoute = AdminProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAboutRoute = AdminAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AdminRoute,
} as any)

const AdminUserIndexRoute = AdminUserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminRoleIndexRoute = AdminRoleIndexImport.update({
  id: '/role/',
  path: '/role/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminProductIndexRoute = AdminProductIndexImport.update({
  id: '/product/',
  path: '/product/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminFileIndexRoute = AdminFileIndexImport.update({
  id: '/file/',
  path: '/file/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminCategoryIndexRoute = AdminCategoryIndexImport.update({
  id: '/category/',
  path: '/category/',
  getParentRoute: () => AdminRoute,
} as any)

const AuthLayoutAuthRegisterRoute = AuthLayoutAuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutAuthLoginRoute = AuthLayoutAuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AdminUserNewRoute = AdminUserNewImport.update({
  id: '/user/new',
  path: '/user/new',
  getParentRoute: () => AdminRoute,
} as any)

const AdminUserIdRoute = AdminUserIdImport.update({
  id: '/user/$id',
  path: '/user/$id',
  getParentRoute: () => AdminRoute,
} as any)

const AdminRoleNewRoute = AdminRoleNewImport.update({
  id: '/role/new',
  path: '/role/new',
  getParentRoute: () => AdminRoute,
} as any)

const AdminRoleIdRoute = AdminRoleIdImport.update({
  id: '/role/$id',
  path: '/role/$id',
  getParentRoute: () => AdminRoute,
} as any)

const AdminProductNewRoute = AdminProductNewImport.update({
  id: '/product/new',
  path: '/product/new',
  getParentRoute: () => AdminRoute,
} as any)

const AdminProductIdRoute = AdminProductIdImport.update({
  id: '/product/$id',
  path: '/product/$id',
  getParentRoute: () => AdminRoute,
} as any)

const AdminFileIdRoute = AdminFileIdImport.update({
  id: '/file/$id',
  path: '/file/$id',
  getParentRoute: () => AdminRoute,
} as any)

const AdminCategoryNewRoute = AdminCategoryNewImport.update({
  id: '/category/new',
  path: '/category/new',
  getParentRoute: () => AdminRoute,
} as any)

const AdminCategoryIdRoute = AdminCategoryIdImport.update({
  id: '/category/$id',
  path: '/category/$id',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout': {
      id: '/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_admin/about': {
      id: '/_admin/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AdminAboutImport
      parentRoute: typeof AdminImport
    }
    '/_admin/profile': {
      id: '/_admin/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AdminProfileImport
      parentRoute: typeof AdminImport
    }
    '/_admin/': {
      id: '/_admin/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/category/$id': {
      id: '/_admin/category/$id'
      path: '/category/$id'
      fullPath: '/category/$id'
      preLoaderRoute: typeof AdminCategoryIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/category/new': {
      id: '/_admin/category/new'
      path: '/category/new'
      fullPath: '/category/new'
      preLoaderRoute: typeof AdminCategoryNewImport
      parentRoute: typeof AdminImport
    }
    '/_admin/file/$id': {
      id: '/_admin/file/$id'
      path: '/file/$id'
      fullPath: '/file/$id'
      preLoaderRoute: typeof AdminFileIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/product/$id': {
      id: '/_admin/product/$id'
      path: '/product/$id'
      fullPath: '/product/$id'
      preLoaderRoute: typeof AdminProductIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/product/new': {
      id: '/_admin/product/new'
      path: '/product/new'
      fullPath: '/product/new'
      preLoaderRoute: typeof AdminProductNewImport
      parentRoute: typeof AdminImport
    }
    '/_admin/role/$id': {
      id: '/_admin/role/$id'
      path: '/role/$id'
      fullPath: '/role/$id'
      preLoaderRoute: typeof AdminRoleIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/role/new': {
      id: '/_admin/role/new'
      path: '/role/new'
      fullPath: '/role/new'
      preLoaderRoute: typeof AdminRoleNewImport
      parentRoute: typeof AdminImport
    }
    '/_admin/user/$id': {
      id: '/_admin/user/$id'
      path: '/user/$id'
      fullPath: '/user/$id'
      preLoaderRoute: typeof AdminUserIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/user/new': {
      id: '/_admin/user/new'
      path: '/user/new'
      fullPath: '/user/new'
      preLoaderRoute: typeof AdminUserNewImport
      parentRoute: typeof AdminImport
    }
    '/_authLayout/auth/login': {
      id: '/_authLayout/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLayoutAuthLoginImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/auth/register': {
      id: '/_authLayout/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthLayoutAuthRegisterImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_admin/category/': {
      id: '/_admin/category/'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof AdminCategoryIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/file/': {
      id: '/_admin/file/'
      path: '/file'
      fullPath: '/file'
      preLoaderRoute: typeof AdminFileIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/product/': {
      id: '/_admin/product/'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof AdminProductIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/role/': {
      id: '/_admin/role/'
      path: '/role'
      fullPath: '/role'
      preLoaderRoute: typeof AdminRoleIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/user/': {
      id: '/_admin/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AdminUserIndexImport
      parentRoute: typeof AdminImport
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminAboutRoute: typeof AdminAboutRoute
  AdminProfileRoute: typeof AdminProfileRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminCategoryIdRoute: typeof AdminCategoryIdRoute
  AdminCategoryNewRoute: typeof AdminCategoryNewRoute
  AdminFileIdRoute: typeof AdminFileIdRoute
  AdminProductIdRoute: typeof AdminProductIdRoute
  AdminProductNewRoute: typeof AdminProductNewRoute
  AdminRoleIdRoute: typeof AdminRoleIdRoute
  AdminRoleNewRoute: typeof AdminRoleNewRoute
  AdminUserIdRoute: typeof AdminUserIdRoute
  AdminUserNewRoute: typeof AdminUserNewRoute
  AdminCategoryIndexRoute: typeof AdminCategoryIndexRoute
  AdminFileIndexRoute: typeof AdminFileIndexRoute
  AdminProductIndexRoute: typeof AdminProductIndexRoute
  AdminRoleIndexRoute: typeof AdminRoleIndexRoute
  AdminUserIndexRoute: typeof AdminUserIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAboutRoute: AdminAboutRoute,
  AdminProfileRoute: AdminProfileRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminCategoryIdRoute: AdminCategoryIdRoute,
  AdminCategoryNewRoute: AdminCategoryNewRoute,
  AdminFileIdRoute: AdminFileIdRoute,
  AdminProductIdRoute: AdminProductIdRoute,
  AdminProductNewRoute: AdminProductNewRoute,
  AdminRoleIdRoute: AdminRoleIdRoute,
  AdminRoleNewRoute: AdminRoleNewRoute,
  AdminUserIdRoute: AdminUserIdRoute,
  AdminUserNewRoute: AdminUserNewRoute,
  AdminCategoryIndexRoute: AdminCategoryIndexRoute,
  AdminFileIndexRoute: AdminFileIndexRoute,
  AdminProductIndexRoute: AdminProductIndexRoute,
  AdminRoleIndexRoute: AdminRoleIndexRoute,
  AdminUserIndexRoute: AdminUserIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface AuthLayoutRouteChildren {
  AuthLayoutAuthLoginRoute: typeof AuthLayoutAuthLoginRoute
  AuthLayoutAuthRegisterRoute: typeof AuthLayoutAuthRegisterRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutAuthLoginRoute: AuthLayoutAuthLoginRoute,
  AuthLayoutAuthRegisterRoute: AuthLayoutAuthRegisterRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthLayoutRouteWithChildren
  '/about': typeof AdminAboutRoute
  '/profile': typeof AdminProfileRoute
  '/': typeof AdminIndexRoute
  '/category/$id': typeof AdminCategoryIdRoute
  '/category/new': typeof AdminCategoryNewRoute
  '/file/$id': typeof AdminFileIdRoute
  '/product/$id': typeof AdminProductIdRoute
  '/product/new': typeof AdminProductNewRoute
  '/role/$id': typeof AdminRoleIdRoute
  '/role/new': typeof AdminRoleNewRoute
  '/user/$id': typeof AdminUserIdRoute
  '/user/new': typeof AdminUserNewRoute
  '/auth/login': typeof AuthLayoutAuthLoginRoute
  '/auth/register': typeof AuthLayoutAuthRegisterRoute
  '/category': typeof AdminCategoryIndexRoute
  '/file': typeof AdminFileIndexRoute
  '/product': typeof AdminProductIndexRoute
  '/role': typeof AdminRoleIndexRoute
  '/user': typeof AdminUserIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthLayoutRouteWithChildren
  '/about': typeof AdminAboutRoute
  '/profile': typeof AdminProfileRoute
  '/': typeof AdminIndexRoute
  '/category/$id': typeof AdminCategoryIdRoute
  '/category/new': typeof AdminCategoryNewRoute
  '/file/$id': typeof AdminFileIdRoute
  '/product/$id': typeof AdminProductIdRoute
  '/product/new': typeof AdminProductNewRoute
  '/role/$id': typeof AdminRoleIdRoute
  '/role/new': typeof AdminRoleNewRoute
  '/user/$id': typeof AdminUserIdRoute
  '/user/new': typeof AdminUserNewRoute
  '/auth/login': typeof AuthLayoutAuthLoginRoute
  '/auth/register': typeof AuthLayoutAuthRegisterRoute
  '/category': typeof AdminCategoryIndexRoute
  '/file': typeof AdminFileIndexRoute
  '/product': typeof AdminProductIndexRoute
  '/role': typeof AdminRoleIndexRoute
  '/user': typeof AdminUserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_authLayout': typeof AuthLayoutRouteWithChildren
  '/_admin/about': typeof AdminAboutRoute
  '/_admin/profile': typeof AdminProfileRoute
  '/_admin/': typeof AdminIndexRoute
  '/_admin/category/$id': typeof AdminCategoryIdRoute
  '/_admin/category/new': typeof AdminCategoryNewRoute
  '/_admin/file/$id': typeof AdminFileIdRoute
  '/_admin/product/$id': typeof AdminProductIdRoute
  '/_admin/product/new': typeof AdminProductNewRoute
  '/_admin/role/$id': typeof AdminRoleIdRoute
  '/_admin/role/new': typeof AdminRoleNewRoute
  '/_admin/user/$id': typeof AdminUserIdRoute
  '/_admin/user/new': typeof AdminUserNewRoute
  '/_authLayout/auth/login': typeof AuthLayoutAuthLoginRoute
  '/_authLayout/auth/register': typeof AuthLayoutAuthRegisterRoute
  '/_admin/category/': typeof AdminCategoryIndexRoute
  '/_admin/file/': typeof AdminFileIndexRoute
  '/_admin/product/': typeof AdminProductIndexRoute
  '/_admin/role/': typeof AdminRoleIndexRoute
  '/_admin/user/': typeof AdminUserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/profile'
    | '/'
    | '/category/$id'
    | '/category/new'
    | '/file/$id'
    | '/product/$id'
    | '/product/new'
    | '/role/$id'
    | '/role/new'
    | '/user/$id'
    | '/user/new'
    | '/auth/login'
    | '/auth/register'
    | '/category'
    | '/file'
    | '/product'
    | '/role'
    | '/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/about'
    | '/profile'
    | '/'
    | '/category/$id'
    | '/category/new'
    | '/file/$id'
    | '/product/$id'
    | '/product/new'
    | '/role/$id'
    | '/role/new'
    | '/user/$id'
    | '/user/new'
    | '/auth/login'
    | '/auth/register'
    | '/category'
    | '/file'
    | '/product'
    | '/role'
    | '/user'
  id:
    | '__root__'
    | '/_admin'
    | '/_authLayout'
    | '/_admin/about'
    | '/_admin/profile'
    | '/_admin/'
    | '/_admin/category/$id'
    | '/_admin/category/new'
    | '/_admin/file/$id'
    | '/_admin/product/$id'
    | '/_admin/product/new'
    | '/_admin/role/$id'
    | '/_admin/role/new'
    | '/_admin/user/$id'
    | '/_admin/user/new'
    | '/_authLayout/auth/login'
    | '/_authLayout/auth/register'
    | '/_admin/category/'
    | '/_admin/file/'
    | '/_admin/product/'
    | '/_admin/role/'
    | '/_admin/user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminRoute: typeof AdminRouteWithChildren
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AdminRoute: AdminRouteWithChildren,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin",
        "/_authLayout"
      ]
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/about",
        "/_admin/profile",
        "/_admin/",
        "/_admin/category/$id",
        "/_admin/category/new",
        "/_admin/file/$id",
        "/_admin/product/$id",
        "/_admin/product/new",
        "/_admin/role/$id",
        "/_admin/role/new",
        "/_admin/user/$id",
        "/_admin/user/new",
        "/_admin/category/",
        "/_admin/file/",
        "/_admin/product/",
        "/_admin/role/",
        "/_admin/user/"
      ]
    },
    "/_authLayout": {
      "filePath": "_authLayout.tsx",
      "children": [
        "/_authLayout/auth/login",
        "/_authLayout/auth/register"
      ]
    },
    "/_admin/about": {
      "filePath": "_admin/about.tsx",
      "parent": "/_admin"
    },
    "/_admin/profile": {
      "filePath": "_admin/profile.tsx",
      "parent": "/_admin"
    },
    "/_admin/": {
      "filePath": "_admin/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/category/$id": {
      "filePath": "_admin/category/$id.tsx",
      "parent": "/_admin"
    },
    "/_admin/category/new": {
      "filePath": "_admin/category/new.tsx",
      "parent": "/_admin"
    },
    "/_admin/file/$id": {
      "filePath": "_admin/file/$id.tsx",
      "parent": "/_admin"
    },
    "/_admin/product/$id": {
      "filePath": "_admin/product/$id.tsx",
      "parent": "/_admin"
    },
    "/_admin/product/new": {
      "filePath": "_admin/product/new.tsx",
      "parent": "/_admin"
    },
    "/_admin/role/$id": {
      "filePath": "_admin/role/$id.tsx",
      "parent": "/_admin"
    },
    "/_admin/role/new": {
      "filePath": "_admin/role/new.tsx",
      "parent": "/_admin"
    },
    "/_admin/user/$id": {
      "filePath": "_admin/user/$id.tsx",
      "parent": "/_admin"
    },
    "/_admin/user/new": {
      "filePath": "_admin/user/new.tsx",
      "parent": "/_admin"
    },
    "/_authLayout/auth/login": {
      "filePath": "_authLayout/auth/login.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/auth/register": {
      "filePath": "_authLayout/auth/register.tsx",
      "parent": "/_authLayout"
    },
    "/_admin/category/": {
      "filePath": "_admin/category/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/file/": {
      "filePath": "_admin/file/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/product/": {
      "filePath": "_admin/product/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/role/": {
      "filePath": "_admin/role/index.tsx",
      "parent": "/_admin"
    },
    "/_admin/user/": {
      "filePath": "_admin/user/index.tsx",
      "parent": "/_admin"
    }
  }
}
ROUTE_MANIFEST_END */
